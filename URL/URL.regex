(?#\
Doc: This regex will capture any argument matching the URL structure

Details:
	It must have a protocol or a filepathname : allows to reduce false positive
	It must take the whole line, but can have whitespaces or quotes around himself

Variables:
	protocol : 			http or https or ftp
	user_mdp : 			will contain each folder in path
	site :				will either contain hostname + domain, or ip_adress
		hostname
		domain
		ip_address
	port
	filepathname
	extension_url
	query_string
	fragment_identifier

)(?#\
)(?#\^["'`]?\s*(?#\
)(?<url_all>(?#\
	)(?=(?P>url_1_protocol)(?P>url_1_user_mdp)?(?P>url_1_site)(?P>url_1_port)?(?P>url_2_filepathname)?(?#\
)|(?#\
	   )(?P>url_1_protocol)?(?P>url_1_user_mdp)?(?P>url_1_site)(?P>url_1_port)?(?P>url_2_filepathname))(?#\
	)(?<url_1_protocol>(?:http|ftp|https):\/\/)?(?#\
	)(?<url_1_user_mdp>[\w_\-.]+:[\w_\-.]+@)?(?#\
	)(?<url_1_site>(?#\
		)(?<url_1_ip_address>(?:\d{1,3}.){3}\d{1,3})|(?#\
		)(?<url_1_hostname>[\w_\-\.]+)(?#\
		)(?<url_1_domain>\.[\w_-]+)(?#\
	))(?#\
	)(?::(?<url_1_port>\d+))?(?#\
	)(?<url_2_filepathname>\/(?:(?#\
		)(?(?=\.)(?#\
			)(?(?=\.(?P>url_2_valid_chars)*\.)\.(?P>url_2_valid_chars)*)(?#\
		)|(?<url_2_valid_chars>[\w,@^=%&:\/~+\-()!\*])(?#\
		)))*(?#\
	))?(?#\
	)(?<url_3_extension_url>\.(?P>url_2_valid_chars)+)?(?#\
	)(?<url_3_query_string>\?(?:(?P>url_2_valid_chars)|\.)+)?(?#\
	)(?<url_3_fragment_identifier>#(?P>url_2_valid_chars)+)?(?#\
))(?#\
)(?#\\s*["'`]?$(?#\
)(?#\
Related doc:
	https://fr.wikipedia.org/wiki/Uniform_Resource_Locator
	https://en.wikipedia.org/wiki/Top-level_domain
	https://pangea.stanford.edu/computing/hosting/urlsyntax/
	https://www.ietf.org/rfc/rfc1738.txt
)